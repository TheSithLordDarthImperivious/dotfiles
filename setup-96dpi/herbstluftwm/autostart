#!/usr/bin/env bash

# this is a simple config for herbstluftwm
# + auto dpi scaling

hc() {
    herbstclient "$@"
}

# Certain values that depend on DPI
# All this is the base for 96 dpi, then it multiplies it by the DPI factor to get the final result.

titleheight=22
borderwidth=3
frameborderwidth=3
windowgap=5
fontsize=14

# DPI Agonistic Function
# Gets DPI from Xresources and then processes it to border width and such.

: "${dpi:=$(xrdb -q | grep Xft.dpi | sed --expression='s/Xft.dpi://')}" "${dpi:=96}"

dpifactor=$(awk "BEGIN {print $dpi/96}")

# Multiplies by DPI factor

titleheightprocessed=$(printf '%.*f\n' 0 $(awk "BEGIN {print $titleheight * $dpifactor}"))
borderwidthprocessed=$(printf '%.*f\n' 0 $(awk "BEGIN {print $borderwidth * $dpifactor}"))
fontsizeprocessed=$(printf '%.*f\n' 0 $(awk "BEGIN {print $fontsize * $dpifactor}"))
frameborderwidthprocessed=$(printf '%.*f\n' 0 $(awk "BEGIN {print $frameborderwidth * $dpifactor}"))
windowgapprocessed=$(printf '%.*f\n' 0 $(awk "BEGIN {print $windowgap * $dpifactor}"))

hc emit_hook reload
hc set_attr settings.default_frame_layout grid

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-a spawn rofi -dpi $dpi -show drun
hc keybind Mod1-Tab spawn rofi -dpi $dpi -show window -kb-accept-entry '!Alt-Tab,!Alt-ISO_Left_Tab,Return' -kb-row-down 'Alt-Tab,Alt-Down,Down' -kb-row-up 'Alt-ISO_Left_Tab,Alt-Up,Up' -kb-cancel 'Alt-Escape,Escape'
hc keybind Mod1-Shift-Tab spawn rofi -dpi $dpi -show window -kb-accept-entry '!Alt-Tab,!Alt-ISO_Left_Tab,Return' -kb-row-down 'Alt-Tab,Alt-Down,Down' -kb-row-up 'Alt-ISO_Left_Tab,Alt-Up,Up' -kb-cancel 'Alt-Escape,Escape'
hc keybind $Mod-w spawn rofi -show power-menu -dpi $dpi -modi power-menu:'~/.config/rofi/rofi-power-menu' -no-show-icons
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume `pactl get-default-sink` +5%
hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume `pactl get-default-sink` -5%
hc keybind XF86AudioMute spawn pactl set-sink-mute `pactl get-default-sink` toggle
hc keybind Shift-XF86AudioRaiseVolume spawn pactl set-sink-volume `pactl get-default-sink` +1%
hc keybind Shift-XF86AudioLowerVolume spawn pactl set-sink-volume `pactl get-default-sink` -1%
hc keybind XF86Search spawn rofi -dpi $dpi -show drun
hc keybind XF86LaunchA spawn rofi -dpi $dpi -show window -kb-accept-entry '!Alt-Tab,!Alt-ISO_Left_Tab,Return' -kb-row-down 'Alt-Tab,Alt-Down,Down' -kb-row-up 'Alt-ISO_Left_Tab,Alt-Up,Up' -kb-cancel 'Alt-Escape,Escape'

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# Same but for reverse
hc keybind $Mod-Shift-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout -1 vertical horizontal max vertical grid    \
               , cycle_layout -1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#0099BC'
hc set frame_border_normal_color '#0063B1'
hc set frame_bg_normal_color '#0063B1'
hc set frame_bg_active_color '#0099BC'
hc set frame_border_width $frameborderwidthprocessed
hc set show_frame_decorations 'focused_if_multiple'
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 0

hc attr theme.title_height $titleheightprocessed
hc attr theme.title_when always
hc attr theme.title_align center
hc attr theme.title_font '-*-fixed-bold-r-*-*-$fontsizeprocessed-*-*-*-*-*-*-*'
hc attr theme.title_font 'Ubuntu Nerd Font:style=Bold:size=10'  # example using Xft
hc attr theme.title_depth 12
hc attr theme.active.color '#0F111A'
hc attr theme.title_color '#BFC3C4'
hc attr theme.normal.color '#0F111A'
hc attr theme.urgent.color '#FF0000'
hc attr theme.tab_color '#0F111A'
hc attr theme.active.tab_color '#151C19'
hc attr theme.active.tab_outer_color '#27332F'
hc attr theme.active.tab_title_color '#BFC3C4'
hc attr theme.normal.title_color '#AAAAAA'
hc attr theme.outer_width $borderwidthprocessed
hc attr theme.padding_top $borderwidthprocessed
hc attr theme.padding_left $borderwidthprocessed
hc attr theme.padding_bottom $borderwidthprocessed
hc attr theme.padding_right $borderwidthprocessed
hc attr theme.outer_color '#107C10'
hc attr theme.active.outer_color '#107C10'
hc attr theme.urgent.outer_color '#FF0000'
hc attr theme.normal.outer_color '#27332F'
# copy outer color to inner_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.outer_color \
        attr theme.${state}.inner_color C
done
hc attr theme.background_color '#3A6EA5'

hc set window_gap $windowgapprocessed
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors
